# Installed by https://github.com/Jipok/void-infect

##############################################################################
## Basic Security Settings
##############################################################################

kernel.sysrq = 0                      # Disable SysRq keys to prevent unauthorized emergency commands in production
kernel.core_uses_pid = 1              # Append process ID to core dump filenames to ensure uniqueness
kernel.pid_max = 65535                # Increase maximum process ID count

kernel.randomize_va_space = 2         # Enable full address space randomization (usually default)
fs.suid_dumpable = 0                  # Disable core dumps for setuid programs
kernel.kptr_restrict = 1              # Restrict exposure of kernel pointers to non-root users (enhances security)
kernel.yama.ptrace_scope = 1          # Restrict ptrace scope to descendant processes only (enhances security)

##############################################################################
## Memory and Performance Tuning
##############################################################################

fs.file-max = 209708                  # Maximum number of open file handles

vm.swappiness = 10                    # Lower swappiness to favor RAM usage over swap
vm.overcommit_memory = 0              # Use heuristic memory overcommit handling
vm.overcommit_ratio = 50              # Set memory overcommit ratio to 50%

vm.min_free_kbytes = 65535            # Reserve minimum free memory in kB

# Tuning dirty pages behavior – adjust based on workload
vm.dirty_ratio = 20
vm.dirty_background_ratio = 5

# I/O and cache tuning
fs.aio-max-nr = 1048576               # Increase maximum concurrent asynchronous I/O operations
vm.vfs_cache_pressure = 50            # Reduce pressure on VFS cache to favor inode/dentry caching

##############################################################################
## Network Security (IPv4 and IPv6)
##############################################################################

# Enable SYN cookies to mitigate SYN flood attacks
net.ipv4.tcp_syncookies = 1

# Enable IP forwarding for Docker, LXC, routers, etc
net.ipv4.ip_forward = 1
net.ipv4.conf.all.forwarding = 1
net.ipv4.conf.default.forwarding = 1
net.ipv6.conf.all.forwarding = 1
net.ipv6.conf.default.forwarding = 1

# Disable source routing to prevent IP spoofing and routing manipulation
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

# Enable Reverse Path Filtering against IP spoofing
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

# Log suspicious ("martian") packets
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

# Additional ICMP tweaks for security
net.ipv4.icmp_echo_ignore_broadcasts = 1        # Drop ICMP echo requests sent to broadcast addresses to thwart smurf attacks
net.ipv4.icmp_ignore_bogus_error_responses = 1  # Ignore bogus ICMP error responses

# Enable temporary IPv6 addresses to enhance privacy and limit tracking
net.ipv6.conf.all.use_tempaddr = 2
net.ipv6.conf.default.use_tempaddr = 2

##############################################################################
## Network Performance Tuning (TCP)
##############################################################################

net.ipv4.tcp_window_scaling = 1      # Enable TCP window scaling

# TCP buffer sizes: min, default, max – tweak these values under heavy network load
net.ipv4.tcp_rmem = 4096 87380 16777216
net.ipv4.tcp_wmem = 4096 65536 16777216
net.core.rmem_max = 16777216         # Maximum OS receive buffer size
net.core.wmem_max = 16777216         # Maximum OS send buffer size

# Set default queuing discipline – 'fq' is a balanced choice; you may choose fq_codel if bufferbloat is an issue
net.core.default_qdisc = fq

# Congestion control – BBR can improve performance on high-latency links (requires kernel ≥ 4.9 and tcp_bbr module)
net.ipv4.tcp_congestion_control = bbr

# Increase maximum number of queued connection requests
net.core.somaxconn = 1024

# Enable TCP Fast Open to reduce latency on subsequent connections (verify compatibility with your firewall)
net.ipv4.tcp_fastopen = 3

## TCP Connection Handling
net.ipv4.tcp_max_syn_backlog  = 4096    # Increase max queued SYN packets for high connection rates
net.core.netdev_max_backlog   = 5000    # Expand device input queue to handle burst network traffic
net.ipv4.tcp_max_tw_buckets   = 65536   # Increase max number of sockets in TIME_WAIT for many short-lived connections
net.ipv4.tcp_tw_reuse         = 1       # Enable reuse of sockets in TIME_WAIT for new connections
net.ipv4.tcp_fin_timeout      = 30      # Reduce FIN_WAIT timeout to free closed connection resources faster
net.ipv4.tcp_slow_start_after_idle = 0  # Disable TCP slow start after idle periods for immediate full bandwidth utilization

## TCP Keepalive and MTU Probing
net.ipv4.tcp_keepalive_time   = 300     # Reduced from default (7200s) to quickly detect idle/dead connections
net.ipv4.tcp_keepalive_intvl  = 30      # Set TCP keepalive probe interval to 30 seconds
net.ipv4.tcp_keepalive_probes = 5       # Set number of keepalive probes before declaring the connection dead
net.ipv4.tcp_mtu_probing      = 1       # Enable TCP MTU probing (useful in VPN environments or when PMTU issues occur)

# Ephemeral port range and network options
net.ipv4.ip_local_port_range = 15000 65535  # Expand ephemeral port range for outgoing connections
net.core.optmem_max          = 65536        # Increase memory buffer for networking options


##############################################################################
## Custom Additions and Routing Flush
##############################################################################

# Increase the maximum number of open file descriptors
fs.nr_open = 1000000

# Rate limit ICMP (e.g., ping) responses to mitigate potential flood attacks
net.ipv4.icmp_ratelimit = 100
net.ipv4.icmp_ratemask = 88089

# Flush routing cache when settings are changed (may not be executed automatically on all systems)
net.ipv4.route.flush = 1
net.ipv6.route.flush = 1

# --- BEGIN MEM_1GB
##############################################################################
## Section for 1 GB RAM or less. Optimized for low-memory environments
##############################################################################

# Reduce minimum memory reserve
vm.min_free_kbytes = 16384      # ~16 MB

# Minimize swap usage to prefer RAM
vm.swappiness = 1

# Reduce TCP buffer sizes for lower memory usage
net.ipv4.tcp_rmem = 4096 65536 4194304
net.ipv4.tcp_wmem = 4096 65536 4194304
net.core.rmem_max = 4194304
net.core.wmem_max = 4194304

# Lower file descriptor limits (still higher than default)
fs.file-max = 100000
fs.nr_open = 500000
net.core.somaxconn = 512

# --- END MEM_1GB
# --- BEGIN MEM_2GB
##############################################################################
## Section for 2 GB RAM. Balanced for small VPS and low-end servers
##############################################################################

# Optimal memory reserve for 2 GB systems
vm.min_free_kbytes = 24576      # ~24 MB

# Low swappiness value to prefer RAM over swap
vm.swappiness = 5

# Optimized TCP buffers for 2 GB systems
net.ipv4.tcp_rmem = 4096 65536 6291456
net.ipv4.tcp_wmem = 4096 65536 6291456
net.core.rmem_max = 6291456
net.core.wmem_max = 6291456

# Balanced file descriptor limits
fs.file-max = 150000
fs.nr_open = 750000
net.core.somaxconn = 768

# --- END MEM_2GB
# --- BEGIN MEM_3-4GB
##############################################################################
## Section for 3-4 GB RAM. Suitable for medium VPS and standard servers
##############################################################################

# Balanced memory reserve
vm.min_free_kbytes = 32768      # ~32 MB

# Standard swappiness for this memory size
vm.swappiness = 10

# Moderate TCP buffer sizes
net.ipv4.tcp_rmem = 4096 87380 8388608
net.ipv4.tcp_wmem = 4096 65536 8388608
net.core.rmem_max = 8388608
net.core.wmem_max = 8388608

# Standard file descriptor limits
fs.file-max = 209708
net.core.somaxconn = 1024

# --- END MEM_3-4GB
# --- BEGIN MEM_5-8GB
##############################################################################
## Section for 5-8 GB RAM. Good for standard production servers
##############################################################################

# Standard memory reserve
vm.min_free_kbytes = 65536      # ~64 MB

# Default swappiness setting
vm.swappiness = 10

# Standard TCP buffer settings
net.ipv4.tcp_rmem = 4096 87380 16777216
net.ipv4.tcp_wmem = 4096 65536 16777216
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216

# Standard connection settings
net.core.somaxconn = 1024
fs.file-max = 209708

# --- END MEM_5-8GB
# --- BEGIN MEM_16+GB
##############################################################################
## Section for 16+ GB RAM. Optimized for high-performance servers
##############################################################################

# Increased memory reserve for larger systems
vm.min_free_kbytes = 131072     # ~128 MB

# Standard swappiness for high-memory systems
vm.swappiness = 10

# Larger TCP buffers for high-performance applications
net.ipv4.tcp_rmem = 4096 87380 33554432
net.ipv4.tcp_wmem = 4096 65536 33554432
net.core.rmem_max = 33554432
net.core.wmem_max = 33554432

# Increased limits for high-connection servers
net.core.somaxconn = 4096
fs.file-max = 800000
# --- END MEM_16+GB